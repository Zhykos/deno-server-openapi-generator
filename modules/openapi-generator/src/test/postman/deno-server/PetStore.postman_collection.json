{
	"info": {
		"_postman_id": "6ab1ef19-cd94-463d-aeed-641c710bd2a0",
		"name": "PetStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Find pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the name, status and PetId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Firulais\");\r",
									"    pm.expect(jsonData.status).to.eql(\"Reserved\");\r",
									"    pm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"petId\")));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{baseUrl}}pet/1",
							"host": [
								"{{baseUrl}}pet"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updates a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Check the PetId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"petId\")));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,  \n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"name\": \"Firulais\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"Reserved\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}pet",
							"host": [
								"{{baseUrl}}pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updates a Pet with Form Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"The PetId is the same\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(pm.environment.get(\"petId\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Firulais",
									"type": "text"
								},
								{
									"key": "status",
									"value": "Waiting",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}pet/{{petId}}",
							"host": [
								"{{baseUrl}}pet"
							],
							"path": [
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a pet with id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the name, status and PetID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Firulais\");\r",
									"    pm.expect(jsonData.status).to.eql(\"Waiting\");\r",
									"    pm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"petId\")));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{baseUrl}}pet/{{petId}}",
							"host": [
								"{{baseUrl}}pet"
							],
							"path": [
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a pet with id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Check PetId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(pm.environment.get(\"petId\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}pet/{{petId}}",
							"host": [
								"{{baseUrl}}pet"
							],
							"path": [
								"{{petId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "Place an order for a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Check the name, status and PetId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"orderId\")));\r",
									"    pm.expect(jsonData.petId).to.eql(parseInt(pm.environment.get(\"petId\")));\r",
									"    pm.expect(jsonData.status).to.eql((\"placed\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{orderId}},\n  \"petId\": {{petId}},\n  \"quantity\": 0,\n  \"shipDate\": \"2022-01-16T09:52:23.792Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}store/order",
							"host": [
								"{{baseUrl}}store"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find purchase order By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.petId).to.eql(parseInt(pm.environment.get(\"petId\")));\r",
									"    pm.expect(jsonData.status).to.eql(\"placed\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}store/order/{{orderId}}",
							"host": [
								"{{baseUrl}}store"
							],
							"path": [
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pet inventory by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{baseUrl}}store/inventory",
							"host": [
								"{{baseUrl}}store"
							],
							"path": [
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete purchase order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(pm.environment.get(\"orderId\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}store/order/{{orderId}}",
							"host": [
								"{{baseUrl}}store"
							],
							"path": [
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create a list of users with given input array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"id\": 10,\n    \"username\": \"Nick\",\n    \"firstName\": \"Nicolas\",\n    \"lastName\": \"Garcia\",\n    \"email\": \"nickgarcia@gmail.com\",\n    \"password\": \"nick1234\",\n    \"phone\": \"688987845\",\n    \"userStatus\": 0\n  },\n  {\n    \"id\": 11,\n    \"username\": \"Kev\",\n    \"firstName\": \"Kevin\",\n    \"lastName\": \"Romano\",\n    \"email\": \"kevromano@gmail.com\",\n    \"password\": \"kev1234\",\n    \"phone\": \"645895214\",\n    \"userStatus\": 0\n  }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}user/createWithList",
							"host": [
								"{{baseUrl}}user"
							],
							"path": [
								"createWithList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user Nick by username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(parseInt(10));\r",
									"    pm.expect(jsonData.username).to.eql(\"Nick\");\r",
									"    pm.expect(jsonData.firstName).to.eql(\"Nicolas\");\r",
									"    pm.expect(jsonData.lastName).to.eql(\"Garcia\");\r",
									"    pm.expect(jsonData.email).to.eql(\"nickgarcia@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"nick1234\");\r",
									"    pm.expect(jsonData.phone).to.eql(\"688987845\");\r",
									"    pm.expect(jsonData.userStatus).to.eql(parseInt(0));\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}v2/user/Nick",
							"host": [
								"{{baseUrl}}v2"
							],
							"path": [
								"user",
								"Nick"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user Kev by username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(parseInt(11));\r",
									"    pm.expect(jsonData.username).to.eql(\"Kev\");\r",
									"    pm.expect(jsonData.firstName).to.eql(\"Kevin\");\r",
									"    pm.expect(jsonData.lastName).to.eql(\"Romano\");\r",
									"    pm.expect(jsonData.email).to.eql(\"kevromano@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"kev1234\");\r",
									"    pm.expect(jsonData.phone).to.eql(\"645895214\");\r",
									"    pm.expect(jsonData.userStatus).to.eql(parseInt(0));\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}v2/user/Kev",
							"host": [
								"{{baseUrl}}v2"
							],
							"path": [
								"user",
								"Kev"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Kev´s password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"11\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  {\n    \"id\": 11,\n    \"username\": \"Kev\",\n    \"firstName\": \"Kevin\",\n    \"lastName\": \"Romano\",\n    \"email\": \"kevromano@gmail.com\",\n    \"password\": \"kev123456\",\n    \"phone\": \"645895214\",\n    \"userStatus\": 0\n  }"
						},
						"url": {
							"raw": "{{baseUrl}}user/Kev",
							"host": [
								"{{baseUrl}}user"
							],
							"path": [
								"Kev"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user Kev by username with new password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(parseInt(11));\r",
									"    pm.expect(jsonData.username).to.eql(\"Kev\");\r",
									"    pm.expect(jsonData.firstName).to.eql(\"Kevin\");\r",
									"    pm.expect(jsonData.lastName).to.eql(\"Romano\");\r",
									"    pm.expect(jsonData.email).to.eql(\"kevromano@gmail.com\");\r",
									"    pm.expect(jsonData.password).to.eql(\"kev123456\");\r",
									"    pm.expect(jsonData.phone).to.eql(\"645895214\");\r",
									"    pm.expect(jsonData.userStatus).to.eql(parseInt(0));\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}v2/user/Kev",
							"host": [
								"{{baseUrl}}v2"
							],
							"path": [
								"user",
								"Kev"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logs Kev into the system",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).contains(\"logged in user session:\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}user/login?username=Kev&password=kev123456",
							"host": [
								"{{baseUrl}}user"
							],
							"path": [
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "Kev"
								},
								{
									"key": "password",
									"value": "kev123456"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logs Kev out of the system",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}user/logout",
							"host": [
								"{{baseUrl}}user"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletes Nick",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Nick\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}user/Nick",
							"host": [
								"{{baseUrl}}user"
							],
							"path": [
								"Nick"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user Nick after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}user/Nick",
							"host": [
								"{{baseUrl}}user"
							],
							"path": [
								"Nick"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "originally downloaded from",
			"value": "https://www.postman.com/navigation-geologist-81350630/workspace/petstore/request/15284061-4e049ba0-b780-48ae-9763-176af01f63c1",
			"type": "default",
			"disabled": true
		}
	]
}