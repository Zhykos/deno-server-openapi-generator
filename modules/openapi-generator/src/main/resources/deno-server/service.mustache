import { {{classname}}Service } from './{{classname}}Service.ts';
{{#imports}}
import { {{classname}} } from '../models/{{classname}}.ts';
{{/imports}}

export class {{classname}}PrivateService {

  private custom{{classname}}Service: {{classname}}Service;

  constructor(custom{{classname}}Service: {{classname}}Service) {
    this.custom{{classname}}Service = custom{{classname}}Service;
  }

  {{#operations}}
  {{#operation}}
  /**
  {{#summary}}
  * {{{.}}}
  {{/summary}}
  {{#notes}}
  * {{{.}}}
  {{/notes}}
  *
  {{#allParams}}
  * {{paramName}} {{{dataType}}} {{{description}}}{{^required}} (optional){{/required}}
  {{/allParams}}
  {{^returnType}}
  * no response value expected for this operation
  {{/returnType}}
  {{#returnType}}
  * returns {{{.}}}
  {{/returnType}}
  * */
  {{{operationId}}} ({{#allParams}}{{paramName}}{{^required}}?{{/required}}: {{{dataType}}}{{^-last}}, {{/-last}}{{/allParams}}) : Promise<{{^returnType}}void{{/returnType}}{{#returnType}}{{{.}}}{{/returnType}}> {
    return new Promise((resolve, reject) => {
      try {
        resolve(this.custom{{classname}}Service.{{{operationId}}}({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}}));
      } catch (e) {
        reject(JSON.stringify({
          error: e.message || 'Error in service {{classname}} >> {{{operationId}}}',
          code: e.status || 500,
        }));
      }
    });
  }
  {{/operation}}
  {{/operations}}

}
